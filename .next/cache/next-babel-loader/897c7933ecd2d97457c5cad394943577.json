{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/lucyking/Documents/Client projects/AVA-Breathing-Space-Web/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App from 'next/app';\nimport { ApolloProvider } from 'react-apollo';\nimport resolveConfig from 'tailwindcss/resolveConfig';\nimport { ThemeProvider } from 'styled-components';\nimport withData from '../lib/withData';\nimport tailwindConfig from '../tailwind.config.js'; //eslint-disable-line\n\nimport '../styles/index.css'; //eslint-disable-line\n\nimport Page from '../components/Page';\nimport Meta from '../components/Meta';\n\nvar _resolveConfig = resolveConfig(tailwindConfig),\n    theme = _resolveConfig.theme;\n\nvar BreathingSpace = /*#__PURE__*/function (_App) {\n  _inherits(BreathingSpace, _App);\n\n  var _super = _createSuper(BreathingSpace);\n\n  function BreathingSpace() {\n    _classCallCheck(this, BreathingSpace);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BreathingSpace, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          apollo = _this$props.apollo,\n          pageProps = _this$props.pageProps;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, __jsx(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(Meta, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }), __jsx(Page, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, __jsx(Component, _extends({}, pageProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                pageProps.query = ctx.query;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return BreathingSpace;\n}(App);\n\nexport default _c = withData(BreathingSpace);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");",
  "map": {
    "version": 3,
    "sources": [
      "/Users/lucyking/Documents/Client projects/AVA-Breathing-Space-Web/pages/_app.js"
    ],
    "names": [
      "App",
      "ApolloProvider",
      "resolveConfig",
      "ThemeProvider",
      "withData",
      "tailwindConfig",
      "Page",
      "Meta",
      "theme",
      "BreathingSpace",
      "props",
      "Component",
      "apollo",
      "pageProps",
      "ctx",
      "getInitialProps",
      "query"
    ],
    "mappings": ";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,cAAP,MAA2B,uBAA3B,C,CAAmD;;AACnD,OAAO,qBAAP,C,CAA6B;;AAE7B,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;qBAEkBL,aAAa,CAACG,cAAD,C;IAAvBG,K,kBAAAA,K;;IAEFC,c;;;;;;;;;;;;;6BAWK;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,MADZ,eACYA,MADZ;AAAA,UACoBC,SADpB,eACoBA,SADpB;AAEP,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,aAAD;AAAe,QAAA,KAAK,EAAEJ,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAFF,CADF,CADF;AAUD;;;;;;;;;;AAtB8BF,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACpCD,gBAAAA,S,GAAY,E;;qBACZF,SAAS,CAACI,e;;;;;;uBACMJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBD,gBAAAA,S;;;AAGFA,gBAAAA,SAAS,CAACG,KAAV,GAAkBF,GAAG,CAACE,KAAtB;iDACO;AAAEH,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EARkBb,G;;AA0B7B,oBAAeI,QAAQ,CAACK,cAAD,CAAvB",
    "sourcesContent": [
      "import App from 'next/app'\nimport { ApolloProvider } from 'react-apollo'\nimport resolveConfig from 'tailwindcss/resolveConfig'\nimport { ThemeProvider } from 'styled-components'\nimport withData from '../lib/withData'\nimport tailwindConfig from '../tailwind.config.js' //eslint-disable-line\nimport '../styles/index.css' //eslint-disable-line\n\nimport Page from '../components/Page'\nimport Meta from '../components/Meta'\n\nconst { theme } = resolveConfig(tailwindConfig)\n\nclass BreathingSpace extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    pageProps.query = ctx.query\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, apollo, pageProps } = this.props\n    return (\n      <ApolloProvider client={apollo}>\n        <ThemeProvider theme={theme}>\n          <Meta />\n          <Page>\n            <Component {...pageProps} />\n          </Page>\n        </ThemeProvider>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default withData(BreathingSpace)\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
